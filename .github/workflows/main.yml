name: Playwright Automation Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  playwright-automation-run:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    # Step 3: Cache Python Dependencies
    - name: Cache Python Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Step 4: Install System Dependencies
    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libnss3 \
          libatk1.0-0 \
          libatk-bridge2.0-0 \
          libcups2 \
          libdrm2 \
          libxkbcommon0 \
          libxshmfence1 \
          libgbm1 \
          libasound2 \
          libxrandr2 \
          libgtk-3-0 \
          libxcomposite1 \
          libxdamage1 \
          libxfixes3 \
          fonts-liberation \
          libappindicator3-1 \
          xdg-utils

    # Step 5: Install OpenVPN
    - name: Install OpenVPN
      run: sudo apt-get install -y openvpn

    # Step 6: Setup VPN Directory
    - name: Setup VPN Directory
      run: mkdir -p VPNs

    # Step 7: Install Python Dependencies
    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 8: Install Playwright Browsers (WITH dependencies)
    - name: Install Playwright Browsers
      run: |
        python -m playwright install --with-deps

    # Step 9: Load Environment Variables via Secrets
    - name: Load Environment Variables
      env:
        SHEET_ID: ${{ secrets.SHEET_ID }}
        MAILING_STREETS_RANGE: ${{ secrets.MAILING_STREETS_RANGE }}
        ZIPCODE_RANGE: ${{ secrets.ZIPCODE_RANGE }}
        APIKEY_2CAPTCHA: ${{ secrets.APIKEY_2CAPTCHA }}
        VPN_USERNAME: ${{ secrets.VPN_USERNAME }}
        VPN_PASSWORD: ${{ secrets.VPN_PASSWORD }}
        CI: "true"

    # Step 10: Run Linting
    - name: Run Linting
      run: |
        pip install flake8
        flake8 truppl_parser.py

    # Step 11: Run Unit Tests
    - name: Run Unit Tests
      run: |
        python -m unittest discover

    # Step 12: Run Playwright Automation Script
    - name: Run Playwright Script
      run: |
        set -e
        python truppl_parser.py

    # Step 13: Archive Logs for Debugging (Optional)
    - name: Archive Logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-logs
        path: automation_logs.txt
