name: Run Python Scraper with CAPTCHA & VPN

on:
  workflow_dispatch:

jobs:
  scraper-job:
    runs-on: windows-latest  # Required for OpenVPN compatibility

    env:
      TWO_CAPTCHA_API_KEY: ${{ secrets.TWO_CAPTCHA_API_KEY }}
      VPN_USERNAME: ${{ secrets.VPN_USERNAME }}
      VPN_PASSWORD: ${{ secrets.VPN_PASSWORD }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install chromium

      - name: Install OpenVPN
        run: |
          choco install openvpn --yes

      - name: Setup VPN Configurations and Auth File
        run: |
          mkdir "C:\Program Files\OpenVPN\config"
          copy externals\VPNs\*.ovpn "C:\Program Files\OpenVPN\config\"
          echo $env:VPN_USERNAME > "C:\Program Files\OpenVPN\config\auth.txt"
          echo $env:VPN_PASSWORD >> "C:\Program Files\OpenVPN\config\auth.txt"

      - name: Create .env File
        run: |
          echo "${{ secrets.ENV_FILE }}" | Out-File -FilePath .env -Encoding utf8 -Force
          certutil -decode .env .env

      - name: Create Google Credentials & Token
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIALS_JSON }}" | Out-File credentials.json.b64
          certutil -decode credentials.json.b64 credentials.json
          echo "${{ secrets.GOOGLE_TOKEN_JSON }}" | Out-File token.json.b64
          certutil -decode token.json.b64 token.json

      - name: Verify OpenVPN Installation
        run: openvpn --version

      - name: Run Main Python Script
        run: |
          python main_script.py
