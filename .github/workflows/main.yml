name: Run Multiple Python Scripts

on:
  push:
  workflow_dispatch:

jobs:
  run-scripts:
    runs-on: ubuntu-latest
    environment: production

    strategy:
      matrix:
        script:
          - "Skip Tracing/truppl_parser.py"

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set Up Python Environment
      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Step 3: Set UTF-8 Encoding
      - name: Set UTF-8 Encoding
        run: echo "PYTHONIOENCODING=UTF-8" >> $GITHUB_ENV

      # Step 4: Install Required System Packages
      - name: Install Required System Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 \
            libgtk-3-0 \
            libgbm1 \
            libasound2t64 \
            libffi8 \
            libx264-dev \
            xvfb

      # Step 5: Verify Installed Packages
      - name: Verify Installed Packages
        run: dpkg -l | grep -E 'libnss3|libgtk-3-0|libgbm1|libasound2t64|libffi8|libx264' || echo "[!] Missing required packages."

      # Step 6: Install Python Dependencies
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install setuptools playwright google-auth google-auth-oauthlib google-auth-httplib2

      # Step 7: Install Playwright Browsers
      - name: Install Playwright Browsers
        run: playwright install

      # Step 8: Restore Credentials and Token Files
      - name: Restore Credentials and Token Files
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIALS_B64 }}" | base64 -d > credentials.json
          echo "${{ secrets.GOOGLE_TOKEN_B64 }}" | base64 -d > token.json

      # Step 9: Verify Credential Files
      - name: Verify Credential Files
        run: ls -lh credentials.json token.json || echo "[!] Credentials files missing."

      # Step 10: Set VPN Credentials as Environment Variables
      - name: Set VPN Credentials as Environment Variables
        run: |
          echo "VPN_USERNAME=${{ secrets.VPN_USERNAME }}" >> $GITHUB_ENV
          echo "VPN_PASSWORD=${{ secrets.VPN_PASSWORD }}" >> $GITHUB_ENV

      # Step 11: Set 2Captcha API Key as Environment Variable
      - name: Set 2Captcha API Key as Environment Variable
        run: echo "APIKEY_2CAPTCHA=${{ secrets.APIKEY_2CAPTCHA }}" >> $GITHUB_ENV

      # Step 12: Verify API Key (Debugging Step)
      - name: Verify APIKEY_2CAPTCHA Environment Variable
        run: |
          if [ -z "$APIKEY_2CAPTCHA" ]; then
            echo "[!] Missing 2Captcha API key!";
            exit 1;
          fi
          echo "APIKEY_2CAPTCHA is set."

      # Step 13: Test Playwright Browser Launch
      - name: Test Playwright Browser Launch
        run: |
          xvfb-run --auto-servernum --server-args="-screen 0 1920x1080x24" python -c "
          from playwright.sync_api import sync_playwright;
          with sync_playwright() as p:
              print('ðŸ”„ Initializing Playwright Chromium...');
              browser = p.chromium.launch(headless=False);
              print('âœ… Playwright test successful!');
              browser.close();
          "

      # Step 14: Run Playwright Script (From Matrix)
      - name: Run Playwright Script (From Matrix)
        run: xvfb-run --auto-servernum --server-args="-screen 0 1920x1080x24" python "${{ matrix.script }}"
