name: Run Python Scraping Script (Windows)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  run-scripts:
    runs-on: windows-latest
    strategy:
      matrix:
        script:
          - "externals/Zillow/zillow.py"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Explicitly define a stable version

      - name: Check Python & pip versions
        run: |
          python --version
          pip --version

      - name: Install Chrome & ChromeDriver
        run: |
          choco install googlechrome -y
          choco install chromedriver -y
          echo "Chrome and Chromedriver installed successfully"

      - name: Install proxybroker first to resolve attrs conflict
        run: |
          pip install attrs==19.1.0 proxybroker==0.3.2 --no-cache-dir

      - name: Install dependencies (Resolve conflicts)
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --force-reinstall setuptools wheel
          pip install --upgrade --force-reinstall --no-cache-dir -r requirements.txt
          pip list  # Debug installed dependencies

      - name: Debug Directory Structure
        run: |
          echo "Listing available files..."
          dir /s /b

      - name: Validate Script Path
        run: |
          $script_path = "${{ matrix.script }}"
          if (!(Test-Path $script_path)) {
            Write-Host "Error: Script $script_path not found! Available files:"
            dir /s /b
            exit 1
          }

      - name: Run Python script
        run: |
          $script_path = "${{ matrix.script }}"
          Write-Host "Running: $script_path"
          python $script_path

      - name: Post-Execution Debugging (Capture Logs)
        if: failure()
        run: |
          Get-EventLog -LogName Application -Newest 50
          Get-EventLog -LogName System -Newest 50

      - name: Clean Virtual Environment (Optional Recovery Step)
        if: failure()
        run: |
          python -m venv env
          .\env\Scripts\Activate
          pip install --upgrade pip setuptools wheel
          pip install --upgrade --force-reinstall -r requirements.txt
