name: Google OAuth Setup and Run CREXi Scraper

# Grant the workflow write access so GITHUB_TOKEN can push back
permissions:
  contents: write

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  setup-and-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # persist-credentials: true is default, so checkout uses GITHUB_TOKEN
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install -y jq

      - name: Install Firefox & geckodriver
        run: |
          sudo apt-get update
          sudo apt-get install -y firefox
          GECKO_VERSION=$(curl -s https://api.github.com/repos/mozilla/geckodriver/releases/latest \
                         | jq -r '.tag_name')
          wget https://github.com/mozilla/geckodriver/releases/download/${GECKO_VERSION}/\
                  geckodriver-${GECKO_VERSION}-linux64.tar.gz
          tar -xzf geckodriver-${GECKO_VERSION}-linux64.tar.gz
          chmod +x geckodriver
          sudo mv geckodriver /usr/local/bin/

      - name: Set up Google OAuth credentials
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p gcreds

          # credentials.json
          echo "${{ secrets.GOOGLE_CREDENTIALS_JSON }}" > gcreds/credentials.json
          jq empty gcreds/credentials.json 2>/dev/null \
            || (echo "⚠️ credentials.json invalid, attempting base64 decode" \
                && echo "${{ secrets.GOOGLE_CREDENTIALS_JSON }}" \
                     | base64 -d > gcreds/credentials.json)

          # token.json
          echo "${{ secrets.GOOGLE_TOKEN_JSON }}" > gcreds/token.json
          jq empty gcreds/token.json 2>/dev/null \
            || (echo "⚠️ token.json invalid, attempting base64 decode" \
                && echo "${{ secrets.GOOGLE_TOKEN_JSON }}" \
                     | base64 -d > gcreds/token.json)

          echo "✅ Google OAuth credentials successfully configured"

      - name: Run CREXi scraper
        run: python "Property Appraiser Scripts/leePA_01.py"

      - name: Log updated token
        if: always()
        run: |
          echo "📜 Updated token.json:"
          cat gcreds/token.json

      - name: Commit & push refreshed token
        if: always()
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add gcreds/token.json
          git diff --cached --quiet || git commit -m "🔄 Auto-update token.json"
          git push origin HEAD:main
