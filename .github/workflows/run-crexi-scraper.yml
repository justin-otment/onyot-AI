name: Run Crexi Scraper

on:
  workflow_dispatch:
  schedule:
    - cron: '0 14 * * *'  # 2PM UTC daily

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install selenium gspread google-auth google-auth-oauthlib fake_useragent jq

      - name: Install Firefox & geckodriver
        run: |
          sudo apt-get update
          sudo apt-get install -y firefox
          GECKO_VERSION=$(curl -s https://api.github.com/repos/mozilla/geckodriver/releases/latest | jq -r '.tag_name')
          wget https://github.com/mozilla/geckodriver/releases/download/${GECKO_VERSION}/geckodriver-${GECKO_VERSION}-linux64.tar.gz
          tar -xzf geckodriver-${GECKO_VERSION}-linux64.tar.gz
          chmod +x geckodriver
          sudo mv geckodriver /usr/local/bin/

      - name: Set up Google OAuth credentials
        run: |
          mkdir -p gcreds
          
          # Write credentials.json using GOOGLE_CREDENTIALS_JSON secret
          if [ -n "${{ secrets.GOOGLE_CREDENTIALS_JSON }}" ]; then
            printf '%s' "${{ secrets.GOOGLE_CREDENTIALS_JSON }}" > gcreds/credentials.json
          else
            echo "Error: GOOGLE_CREDENTIALS_JSON secret is not set." >&2
            exit 1
          fi
          
          # Write token.json using GOOGLE_TOKEN_JSON secret
          if [ -n "${{ secrets.GOOGLE_TOKEN_JSON }}" ]; then
            printf '%s' "${{ secrets.GOOGLE_TOKEN_JSON }}" > gcreds/token.json
          else
            echo "Error: GOOGLE_TOKEN_JSON secret is not set." >&2
            exit 1
          fi

          # Optional preliminary validation using jq. This may error out if the files arenâ€™t valid JSON.
          jq empty gcreds/credentials.json
          jq empty gcreds/token.json

      - name: Decode JSON files if necessary
        run: |
          for f in gcreds/credentials.json gcreds/token.json; do
            if ! jq empty "$f" >/dev/null 2>&1; then
              echo "$f is not valid JSON; attempting base64 decode..."
              base64 -d "$f" > "${f}.decoded" || { echo "Error decoding $f"; exit 1; }
              mv "${f}.decoded" "$f"
              if jq empty "$f" >/dev/null 2>&1; then
                echo "$f successfully decoded from base64"
              else
                echo "Decoding for $f did not produce valid JSON"
                exit 1
              fi
            else
              echo "$f is valid JSON"
            fi
          done

      - name: Run CREXi scraper
        run: python externals/Zillow/crexiLoop.py
