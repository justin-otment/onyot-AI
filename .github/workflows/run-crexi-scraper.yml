# .github/workflows/crexi-scraper.yml
name: CREXi “Cape Coral” Scraper

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read     # no repo-writes here

jobs:
  run-scraper:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Install Firefox & geckodriver
        run: |
          sudo apt-get install -y firefox
          GECKO=$(curl -s https://api.github.com/repos/mozilla/geckodriver/releases/latest \
                    | jq -r .tag_name)
          wget https://github.com/mozilla/geckodriver/releases/download/$GECKO/\
geckodriver-$GECKO-linux64.tar.gz
          tar -xzf geckodriver-$GECKO-linux64.tar.gz
          chmod +x geckodriver
          sudo mv geckodriver /usr/local/bin/

      - name: Set up Google OAuth creds
        run: |
          mkdir -p gcreds
          # write credentials.json
          echo "${{ secrets.GOOGLE_CREDENTIALS_JSON }}" > gcreds/credentials.json
          if ! jq empty gcreds/credentials.json; then
            echo "${{ secrets.GOOGLE_CREDENTIALS_JSON }}" \
              | base64 -d > gcreds/credentials.json
          fi
          # write token.json
          echo "${{ secrets.GOOGLE_TOKEN_JSON }}" > gcreds/token.json
          if ! jq empty gcreds/token.json; then
            echo "${{ secrets.GOOGLE_TOKEN_JSON }}" \
              | base64 -d > gcreds/token.json
          fi

      - name: Run CREXi scraper
        run: python "Property Appraiser Scripts/leePA_01.py"

      - name: Log updated token.json
        if: always()
        run: |
          echo "📄 token.json after run:"
          cat gcreds/token.json
