name: Google OAuth Setup

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  setup-google-auth:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Google OAuth credentials
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p gcreds

          echo "▶️ Writing credentials.json"
          echo "${{ secrets.GOOGLE_CREDENTIALS_JSON }}" > gcreds/credentials.json || {
            echo "❌ Failed to write credentials.json"
            exit 1
          }

          if ! jq empty gcreds/credentials.json 2>/dev/null; then
            echo "⚠️ credentials.json is not valid JSON. Trying base64 decode..."
            echo "${{ secrets.GOOGLE_CREDENTIALS_JSON }}" | base64 -d > gcreds/credentials.json || {
              echo "❌ Base64 decoding failed for credentials.json"
              exit 1
            }
          fi

          echo "▶️ Writing token.json"
          echo "${{ secrets.GOOGLE_TOKEN_JSON }}" > gcreds/token.json || {
            echo "❌ Failed to write token.json"
            exit 1
          }

          if ! jq empty gcreds/token.json 2>/dev/null; then
            echo "⚠️ token.json is not valid JSON. Trying base64 decode..."
            echo "${{ secrets.GOOGLE_TOKEN_JSON }}" | base64 -d > gcreds/token.json || {
              echo "❌ Base64 decoding failed for token.json"
              exit 1
            }
          fi

          echo "✅ Google OAuth credentials successfully configured"

      # Optional: confirm file contents for debugging (never do this with real secrets)
      # - name: Debug credentials (only enable for testing!)
      #   run: |
      #     echo "Credentials:"
      #     cat gcreds/credentials.json
      #     echo "Token:"
      #     cat gcreds/token.json

      # Example: Use credentials for gapps CLI or node script, etc.
      # - name: Use credentials
      #   run: |
      #     ./your-script-using-google-auth.sh gcreds/credentials.json gcreds/token.json
